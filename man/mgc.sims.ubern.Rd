% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{mgc.sims.ubern}
\alias{mgc.sims.ubern}
\title{Uncorrelated Bernoulli Simulation}
\usage{
mgc.sims.ubern(n, d, eps = 0.5, p = 0.5)
}
\arguments{
\item{n}{the number of samples for the simulation.}

\item{d}{the number of dimensions for the simulation setting.}

\item{eps}{the noise level for the simulation. Defaults to \code{0.5}.}

\item{p}{the bernoulli probability.}
}
\value{
a list containing the following:
\item{\code{X}}{\code{[n, d]} the data matrix with \code{n} samples in \code{d} dimensions.}
\item{\code{Y}}{\code{[n]} the response array.}
}
\description{
A function for Generating an uncorrelated bernoulli simulation.
}
\section{Details}{

Given: \eqn{w_i = \frac{1}{i}}{w[i] = 1/i} is a weight-vector that scales with the dimensionality.
Simulates \eqn{n} points from \eqn{UBern(X, Y) \in  \mathbb{R}^d \cross \mathbb{R}}{UBern(X, Y)}, where:
\deqn{U \sim \mathcal{B}(p)}{U ~ B(p)}
\deqn{X \sim \mathcal{B}\left(p\right)^d + \epsilon\mathcal{(0, I_d)}}{X ~ B(p)^d + eps*N(0, I_d)}
\deqn{Y = (2U - 1)w^TX + \epsilon}{Y = (2*U-1)w^T*X + 0.5*eps}
}

\examples{
library(mgc)
result  <- mgc.sims.ubern(n=100, d=10)  # simulate 100 samples in 10 dimensions
X <- result$X; Y <- result$Y
}
\author{
Eric Bridgeford
}
